name: dummy
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    configs:
      - source: postgres
        target: /docker-entrypoint-initdb.d/init.sql
    volumes:
      - pgdata:/var/lib/postgresql/data

  postrest:
    image: postgrest/postgrest:latest
    depends_on:
      - postgres
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/usecase212_assets
      PGRST_DB_ANON_ROLE: postgres
      PGRST_JWT_SECRET: "reallyreallyreallyreallyverysafe"
      PGRST_DB_SCHEMA: public
      PGRST_SERVER_PORT: 3000
    ports:
      - "3000:3000"

  mqtt:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
    configs:
      - source: mosquitto
        target: /mosquitto/config/mosquitto.conf

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  minio-cli:
    image: minio/mc:latest
    depends_on:
      - minio
    configs:
      - source: minio
        target: /usr/local/bin/minio-setup.sh
        mode: 0755
    entrypoint: >
      /bin/sh -c "/usr/local/bin/minio-setup.sh"

  dummy-data-generator:
    build: .
    depends_on:
      - postgres
      - mqtt
      - minio
      - minio-cli
    restart: unless-stopped
    environment:
      # Database settings
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      REMOTE_METERS_DB: usecase206_remote_meters
      MANUAL_METERS_DB: usecase206_manual_meters
      MANUAL_READINGS_DB: usecase206_manual_readings
      ASSETS_DB: usecase212_assets

      # MinIO settings
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_BUCKET: dummy-data
      MINIO_SECURE: false

      # MQTT settings
      MQTT_HOST: mqtt
      MQTT_PORT: 1883
      MQTT_TOPIC_PREFIX: buildings

      # Job scheduling settings
      USECASE206_INTERVAL: 60
      USECASE212_INTERVAL: 5

      # Data generation settings
      NUM_PLANTS: 10
      NUM_PARTS: 10
      NUM_BUILDINGS: 5
      SINE_PERIOD: 60

      # Logging settings
      LOG_LEVEL: INFO
    volumes:
      # Optional: mount logs directory if you want persistent logs
      - ./logs:/app/logs

volumes:
  pgdata:
  minio-data:

configs:
  mosquitto:
    file: ./mosquitto.conf
  minio:
    file: ./minio-setup.sh
  postgres:
    content: |
      CREATE DATABASE usecase212_assets;
      \c usecase212_assets
      -- Table: buildings
      CREATE TABLE buildings (
          id INTEGER PRIMARY KEY,
          city TEXT NOT NULL,
          zip INTEGER NOT NULL,
          street TEXT NOT NULL  -- contains street name and house number
      );

      -- Table: contacts
      CREATE TABLE contacts (
          building_id INTEGER NOT NULL,
          role TEXT NOT NULL,  -- e.g., 'Hausmeister'
          email TEXT,
          phonenumber TEXT,
          first_name TEXT,
          last_name TEXT,
          FOREIGN KEY (building_id) REFERENCES buildings(id)
      );

      CREATE DATABASE usecase206_remote_meters;
      \c usecase206_remote_meters
      -- Table: meter
      CREATE TABLE meter (
          id SERIAL PRIMARY KEY,         -- Auto-incremented ID
          plant_id TEXT NOT NULL         -- Maps to plant_id in another system (no prefix)
      );

      -- Table: meter_reading
      CREATE TABLE meter_reading (
          id SERIAL PRIMARY KEY,         -- Auto-incremented ID
          timestamp TIMESTAMP NOT NULL,  -- e.g., '2023-01-15 08:00:00'
          value NUMERIC NOT NULL CHECK (value BETWEEN -100.0 AND 100.0), -- Range validation
          meter_id INTEGER NOT NULL REFERENCES meter(id)                 -- FK to meter
      );

      CREATE DATABASE usecase206_manual_meters;
      \c usecase206_manual_meters
      -- Table: meter
      CREATE TABLE meter (
          id SERIAL PRIMARY KEY,         -- Auto-incremented ID
          plant_id TEXT NOT NULL         -- Maps to plant_id in another system (no prefix)
      );

      CREATE DATABASE usecase206_manual_readings;
      \c usecase206_manual_readings

      -- Table: readings
      CREATE TABLE readings (
          id SERIAL PRIMARY KEY,         -- Auto-incremented ID
          timestamp TIMESTAMP NOT NULL,  -- e.g., '2023-01-15 08:00:00'
          value NUMERIC NOT NULL CHECK (value BETWEEN -100.0 AND 100.0), -- Range validation
          meter_id INTEGER NOT NULL                -- FK to meter
      );

      GRANT USAGE ON SCHEMA public TO postgres;
      GRANT SELECT ON ALL TABLES IN SCHEMA public TO postgres;

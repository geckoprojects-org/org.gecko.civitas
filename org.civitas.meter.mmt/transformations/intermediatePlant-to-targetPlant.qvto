/**
 * Copyright (c) 2012 - 2025 Data In Motion and others.
 * All rights reserved. 
 * 
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *     Data In Motion - initial API and implementation
 */
modeltype ECORE "strict" uses ecore('http://www.eclipse.org/emf/2002/Ecore');
modeltype SOURCE uses "https://civitas.org/meter/source/1.0.0";
modeltype TARGET uses "https://civitas.org/meter/target/1.0.0";


transformation IntermediatePlantToTargetPlant(in intermediatePlant : SOURCE, out targetPlant : TARGET);

main() {
	intermediatePlant.rootObjects()[SOURCE::IntermediatePlant] -> map toTargetPlant(); 
}

mapping SOURCE::IntermediatePlant::toTargetPlant(): TARGET::Plant {
	id := self.id;
	city := self.basicData.city;
	postalcode := self.basicData.zip;
	street := self.basicData.street;
	net := self.map toTargetNet();
	operatingData += self.operatingData->map toTargetOperatingData();
}

mapping SOURCE::IntermediatePlant::toTargetNet(): TARGET::Net {
	id := self.basicData.net.toString();
	number := self.basicData.net.toString();
}

mapping SOURCE::OperatingData::toTargetOperatingData(): TARGET::OperatingData {
	id := self.id.toString();
	operatingHours := self.operatingHours;
}

